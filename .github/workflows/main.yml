name: Deploy Jekyll site to GitHub Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # 每周日运行一次

concurrency:
  group: "pages"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

env:
  UBUNTU_REPO_NAME: ubuntu

jobs:
  check-mihomo:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      needs-update: ${{ steps.compare.outputs.needs-update }}
    steps:
      - name: Get latest tag
        id: tag
        run: |
          tag="$(curl -s https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r .tag_name)"
          echo "tag=$tag" >> $GITHUB_ENV
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare
        run: |
          name="mihomo-linux-amd64-v3-${tag}.deb"
          code="$(curl -o /dev/null -s -w "%{http_code}\n" -I https://aquanjsw.github.io/files/${{ env.UBUNTU_REPO_NAME }}/pool/main/m/mihomo/$name)"
          if [ "$code" -eq 200 ]; then
            echo "needs-update=false" >> $GITHUB_OUTPUT
          else
            echo "needs-update=true" >> $GITHUB_OUTPUT
          fi
  build:
    runs-on: ubuntu-latest
    needs: check-mihomo
    if: needs.check-mihomo.outputs.needs-update == 'true' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y gnupg aptly
      - name: Import GPG key
        run: echo '${{ secrets.PGP_PRIVATE_KEY }}' | gpg --import
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare debs
        run: |
          tag="${{ needs.check-mihomo.outputs.tag }}"
          name="mihomo-linux-amd64-v3-${tag}.deb"
          wget -q "https://github.com/MetaCubeX/mihomo/releases/download/${tag}/${name}"

          pubkey=pubkey.gpg
          gpg --armor --export ${{ vars.EMAIL }} > $pubkey
          export PUBKEY=$pubkey
          export REPO=${{ env.UBUNTU_REPO_NAME }}
          ./repack-deb.sh "${name}" "${name}"

          echo "mihomo=${name}" >> $GITHUB_ENV
      - name: Prepare ubuntu repo
        run: |
          aptly repo create -distribution=stable -component=main ubuntu-repo
          aptly repo add ubuntu-repo "${{ env.mihomo }}"
          aptly publish repo -gpg-key=${{ vars.EMAIL }} ubuntu-repo
          cp -r ~/.aptly/public ./${{ env.UBUNTU_REPO_NAME }}
      - name: Create nodes
        run: find ./${{ env.UBUNTU_REPO_NAME }} -type d | sed 's|/$||g' | xargs -I{} touch "{}/index.md"
      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: "3.1" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
