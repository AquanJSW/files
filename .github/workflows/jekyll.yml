# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      DEBIAN_REPO_NAME: debian
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y gnupg aptly
      - name: Import GPG key
        run: echo '${{ secrets.PGP_PRIVATE_KEY }}' | gpg --import
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare debian repo
        run: |
          aptly repo create -distribution=stable -component=main repo

          curl -L https://github.com/MetaCubeX/mihomo/releases/download/v1.19.14/mihomo-linux-amd64-v3-v1.19.14.deb -o mihomo.deb
          aptly repo add repo mihomo.deb

          aptly publish repo -gpg-key=${{ vars.EMAIL }} repo
          cp -r ~/.aptly/public ./${{ env.DEBIAN_REPO_NAME }}
          gpg --armor --export ${{ vars.EMAIL }} > ./${{ env.DEBIAN_REPO_NAME }}/pubkey.gpg

      - name: Prenodes
        run: find ${{ env.DEBIAN_REPO_NAME }} -type d | sed 's|/$||g' | xargs -I{} touch "{}/index.md"
      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: "3.1" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
